Функция ft_lstmap()
t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *));

Параметры:
lst - указатель на элемент списка
f - указатель на фукнцию, которая применяется во время итерирования по списку.
del - указатель на функцию, которая используется для очищения поля content определенного элемента списка, если это необходимо.

Возвращаемое значение:
Новый список. NULL - если выделение памяти прошло неудачно.

Разрешенные функции:
malloc, free

Описание:
Итерируемся по списку lst и применяем фукнцию f к полю content каждого элемента. Создать новый список, в который будет добавляться возвращаемое функцией f значение.
Функция del используется для удаления значения поля content у элемента списка, если это необходимо.
==========================

функция void *(*f)(void *) - принимает в качестве аргумента поле content из элемента списка(структуры) и возвращает указатель на измененный(видимо) content.

функция void (*del)(vooid *) - принимает в качестве аргумента так же content и удаляет его, ничего не возвращает.

Алгоритм работы:
1. У нас есть указатель на элемент списка. Необходимо к его полю content применить функцию f, чтобы получить новый content и создать с помощью него новую структуру.
2. Таким образом у нас будет несколько указателей на структуры:
	1 - на исходную, которую нам передали(вернее его копия, чтобы не изменять оригинальный)
	2 - на новую, созданную при первом применении функции f к полю content.
3. Мы будем итерироваться по исходному списку, применять к каждому полю текущего элемента функцию content и полученный ответ отправлять в функцию создания новой структуры, полученный адрес будет записывать в поле next текущего элемента результирующей структуры.
4. Если в какой то момент от функции создания новой структуры вернется NULL - вызываем функцию очищения всего списка и возвращаем NULL.
5. В конце вернем сохраненный адрес начала результирующей структуры -т.е. адрес первого элемента списка.